/*
 * Copyright 2022 Liju Jayakumar. All Rights Reserved.
*/

function clean_up(inputText) {

    inputText = inputText.replace(/S/g, "5");
    return inputText;
}

function parse() {

    console.log("Parsing ...");

    // cleanup
    let inputText = clean_up(txtInput.value);
    txtOutput.value = EMPTY;

    // prepare
    let patterns = inputPatterns.options;

    // extract
    for (let i = 0; i < patterns.length; i++) {
        let pattern = patterns[i].value;
        const regex = new RegExp(pattern, "gm")
        let pattern_matched;

        while ((pattern_matched = regex.exec(inputText)) !== null) {
            if (pattern_matched.index === regex.lastIndex) {
                regex.lastIndex++;
            }

            pattern_matched.forEach((match) => {
                let phone_number = match.replace(/ /g, EMPTY);
                txtOutput.value += `${phone_number}` + CR_LF;

                for (let index = 0; index < 10; index++) {
                    let auto_gen_number = phone_number.slice(0, -1) + index;

                    if (auto_gen_number != phone_number) {
                        txtVirtualOutput.value += `${auto_gen_number}` + CR_LF;
                    }

                }
            });
        }
    }

    showHideDownload();

    lblResult.innerHTML = setCount(RESULT, txtOutput);
    lblAutogenerated.innerHTML = setCount(AUTO_GENERATED, txtVirtualOutput);
    console.log("Parsed");
    notify("Done");
}

function setCount(title, control) {
    return `${title} (${getLength(control)}) Numbers`;
}

function getLength(element) {
    element.value.split("\n").length - 1
}

function handleFileSelect(event) {

    const reader = new FileReader()
    reader.onload = handleFileLoad;
    reader.readAsText(event.files[0])
}

function handleFileLoad(event) {

    txtInput.value = event.target.result;

    notify("File uploaded");

    parse();
}

function clearAll() {

    txtInput.value = EMPTY;
    txtOutput.value = EMPTY;
    txtVirtualOutput.value = EMPTY;
    fileUploadInput.value = EMPTY;

    lblResult.innerHTML = RESULT;
    lblAutogenerated.innerHTML = AUTO_GENERATED;

    showHideDownload();
}

function download(selector) {

    let textToDownload = document.querySelector(selector).value;

    if (textToDownload) {
        let blob = new Blob([textToDownload], { type: "text/plain" });

        let downloadLink = document.createElement("a");
        downloadLink.download = `phone_numbers_${Date.now()}.txt`;
        downloadLink.innerHTML = "download";

        if (window.webkitURL != null) {
            downloadLink.href = window.webkitURL.createObjectURL(blob);
        }
        else {
            downloadLink.href = window.URL.createObjectURL(blob);
            downloadLink.onclick = destroyClickedElement;
            downloadLink.style.display = "none";
            document.body.appendChild(downloadLink);
        }

        downloadLink.click();
    }

    notify("Download Completed");
}

function showHideDownload() {

    setVisible(btnDownload, txtOutput.value);
    setVisible(btnOutputCopy, txtOutput.value);

    setVisible(btnVirtualOutputDownload, txtVirtualOutput.value);
    setVisible(btnAutoOutputCopy, txtVirtualOutput.value);
}

function setVisible(element, condition) {
    element.style.visibility = condition ? VISIBLE : HIDDEN;
}

function copy(selector) {

    let textarea = document.querySelector(selector);
    textarea.select();
    textarea.setSelectionRange(0, 99999);
    navigator.clipboard.writeText(textarea.value);

    notify("Copied to Clipboard");
}

function notify(message) {
    notification.style.visibility = VISIBLE;
    notificationText.innerHTML = message || EMPTY;
    $(".alert").fadeTo(2000, 500).slideUp(500, function () {
        $(".alert").slideUp(500);
    });
}

function initialize() {

    console.log("Initializing");
    txtInput = document.querySelector("#input-text")
    inputPatterns = document.querySelector("#input-patterns");
    txtOutput = document.querySelector("#output-text");
    txtVirtualOutput = document.querySelector("#auto-output-text");
    fileUploadInput = document.querySelector("#fileInput");

    btnDownload = document.querySelector("#output-download");
    btnVirtualOutputDownload = document.querySelector("#auto-output-download");

    btnOutputCopy = document.querySelector("#output-copy");
    btnAutoOutputCopy = document.querySelector("#auto-output-copy");

    btnParse = document.querySelector("#btnParse");
    btnClear = document.querySelector("#btnClear");
    lblResult = document.querySelector("#lblResult");
    lblAutogenerated = document.querySelector("#lblAutogenerated");

    notification = document.querySelector("#notification");
    notificationText = document.querySelector("#lblNotificationText");


    clearAll();

    console.log("Initialized");
}

// globals
let txtInput, inputPatterns, txtOutput, txtVirtualOutput,
    fileUploadInput, btnDownload, btnVirtualOutputDownload,
    btnParse, btnClear, lblResult, lblAutogenerated,
    notification, notificationText, btnOutputCopy, btnAutoOutputCopy;

const RESULT = "Result",
    AUTO_GENERATED = "Autogenerated",
    EMPTY = "",
    VISIBLE = "visible",
    HIDDEN = "hidden",
    CR_LF = "\r\n";